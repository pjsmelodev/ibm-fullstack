SDLC -> SOFTWARE DEVELOPMENT LIFE CYCLE

    1 -> Planning
    2 -> Design
    3 -> Development
    4 -> Testing
    5 -> Deployment
    6 -> Maintenance

    As fases são discretas -> não há overlap entre elas

    PHASE 1:
        SRS -> SOFTWARE REQUIREMENTS SPECIFICATION

    PHASE 2:
        Design Document

    PHASE 4:
        Testing:
            Unit, Integration, System, Acceptance
    
    PHASE 5:
        UAT -> User Acceptance Testing Environment

UNGRADED PLUGIN:

1 - The product manager works with the customer to prioritize the requirements
        Planning
    
2 - The QA tem assesses the code released to the stating platform against que use cases. They discover one requirement has not been addressed
        Testing

3 - The software engineers release the code into a production environment
        Deployment

PRACTICE ASSIGNMENT:

1 - Which of the following best describes the primary responsibilities of a software engineer? 
        Designing, building, and maintaining software systems

2 - Which of the following best describes a key advantage for a business to follow the SDLC? 
        The SDL offers and overview of the process, so stakeholders know where they fit into that process

3 - Which of the following best describes an activity that happens in the planning phase of the software development lifecycle (SDLC)? 
        User requirements are written

4 - Which of the following best describes an alpha release? 
        It is the first functioning version of a system released to a select group of stakeholders

5 - Which statement best describes the User Requirements Specification (URS)? 
        It primarily contains use cases


SOFTWARE DEVELOPMENT METHEDOLOGIES

    WATERFALL METHOD:
        Plan -> Design -> Develop -> Test -> Deploy -> Mainitain

    V-SHAPE MODEL:
        -> Verification
            -> Plan -> System Design -> Architecture Design -> Module Design -> Coding
        |
        |-> Coding -> Validation
                        -> Unit Testing -> Integration Testing -> System Testing -> Acceptance Testing
    
    AGILE:
        Processo iterativo -> Sprint Cycles
        Circular
            -> Plan -> Design -> Develop -> Test -> Deploy -> Feedback -> Plan => Para cada Sprint Cycle
        |
        |-> De forma a gerar um MVP (ao fim de alguns ciclos)
            |-> MVP: Minimal Viable Product

        Agile Core Values (Manifesto):
            Individuals and interactions over processes and tools
            Working software over comprehensive documentation
            Customer collaboration over contract negotiation
            Responding to change over following a plan

VERSIONS:
    1.0 -> Primeira release (sem updates ou patches)
    0.x -> Alfa ou beta

    É comum terem 4 grupos de números:
        1º grupo: The first number indicates major changes to the software, such as a new release

        2º grupo: The second number indicates that minor changes were made to a piece of the software

        3º grupo: The third number indicates patches or minor bug fixes

        4º grupo: The fourth number indicates build numbers, build dates, and less significant changes~

TESTING:
    Functional testing
    Non-Functional testing
    Regression testing

    FUNCTIONAL TESTING:
        Black Box (System Under Test) -> não olha para o código, preocupa-se com o IO
        